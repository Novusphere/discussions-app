{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { observer } from 'mobx-react';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\nimport classNames from 'classnames';\nimport { Tooltip } from 'react-tippy';\nimport { TagPreview } from \"./..\";\n\nconst Sidebar = (_ref) => {\n  let {\n    tags,\n    activeTag\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"tags\", \"activeTag\"]);\n\n  const renderActiveTag = () => {\n    if (activeTag) {\n      return __jsx(\"div\", {\n        className: 'pa4 bg-white shadow'\n      }, __jsx(\"span\", {\n        className: 'flex flex-row items-center'\n      }, __jsx(\"img\", {\n        src: activeTag.icon,\n        title: `${activeTag.name} icon`,\n        className: 'activeTag-image w-10 mr2'\n      }), __jsx(\"span\", {\n        className: 'b black f6'\n      }, \"e/\", activeTag.name)), __jsx(\"span\", {\n        className: 'flex row fa5 mt2 f5'\n      }, activeTag.memberCount, \" Members\"), __jsx(\"span\", {\n        className: 'flex row black mt2 f6'\n      }, activeTag.tagDescription), __jsx(\"div\", {\n        className: 'flex flex-column items-center justify-center mt3'\n      }, __jsx(\"button\", {\n        className: 'w-100 mb2'\n      }, \"Join Community\"), __jsx(\"button\", {\n        className: 'w-100 button-outline'\n      }, \"Create Post\")));\n    }\n\n    return null;\n  };\n\n  return __jsx(React.Fragment, null, renderActiveTag(), __jsx(\"ul\", {\n    className: 'w-100'\n  }, Array.from(tags.values()).filter(tag => tag.root).map(tag => __jsx(\"li\", {\n    key: tag.id,\n    className: classNames(['ph3 pb3', {\n      active: props.router.asPath === tag.url\n    }])\n  }, __jsx(Link, {\n    href: tag.url\n  }, __jsx(\"a\", {\n    className: 'db black pointer pb1 no-underline'\n  }, tag.name)))), __jsx(\"div\", {\n    className: 'divider-line mb2'\n  }), Array.from(tags.values()).filter(tag => !tag.root).map(tag => __jsx(\"li\", {\n    key: tag.id,\n    className: classNames(['ph3 pb1', {\n      active: props.router.asPath === tag.url\n    }])\n  }, __jsx(Tooltip, {\n    animateFill: false,\n    interactive: true,\n    html: __jsx(TagPreview, {\n      tag: tag\n    }),\n    position: 'left-end',\n    unmountHTMLWhenHide: true,\n    offset: 150,\n    stickyDuration: 0,\n    sticky: true,\n    duration: 275,\n    animation: 'fade',\n    className: 'interactive-hover',\n    distance: 400,\n    trigger: 'mouseenter focus'\n  }, __jsx(Link, {\n    href: {\n      pathname: '/tag',\n      query: {\n        name: tag.name\n      }\n    },\n    as: `/tag/${tag.name}`\n  }, __jsx(\"a\", {\n    className: 'flex items-center pb1 pointer'\n  }, __jsx(\"img\", {\n    className: 'tag-icon pr2',\n    src: tag.icon,\n    alt: `${tag.name} icon`\n  }), __jsx(\"span\", {\n    className: 'db black no-underline'\n  }, '#', tag.name))))))));\n};\n\nexport default withRouter(observer(Sidebar));","map":null,"metadata":{},"sourceType":"module"}