{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _temp;\n\nimport { CreateForm } from \"../components\";\nimport { BaseStore, getOrCreateStore } from 'next-mobx-wrapper';\nimport { observable } from 'mobx';\nimport { persist } from 'mobx-persist';\nlet Settings = (_class = (_temp = class Settings extends BaseStore {\n  constructor(...args) {\n    super(...args);\n\n    _initializerDefineProperty(this, \"localStorageVersion\", _descriptor, this);\n  }\n\n  get setIdForm() {\n    return new CreateForm({\n      onSuccess: form => {\n        console.log(form);\n      }\n    }, [{\n      name: 'name',\n      label: `Name`,\n      placeholder: 'Enter your desired ID',\n      rules: 'required|string'\n    }, {\n      name: 'key',\n      label: `Key`,\n      value: '123123123',\n      rules: 'required|string'\n    }]);\n  }\n\n  get moderationForm() {\n    return new CreateForm({\n      onSuccess: form => {\n        console.log(form);\n      }\n    }, [{\n      name: 'known',\n      label: `Known`,\n      placeholder: 'Select a url',\n      rules: 'required|string',\n      type: 'dropdown',\n      extra: {\n        options: [{\n          value: 'novusphere',\n          label: 'novusphereio (forum.novusphere.io)'\n        }, {\n          value: 'rama3wi4o324',\n          label: 'rama3wi4o324 (spacefun.github.io)'\n        }]\n      }\n    }, {\n      name: 'key',\n      label: 'Key',\n      placeholder: 'endpoint',\n      rules: 'required|string'\n    }]);\n  }\n\n  get rawForm() {\n    return new CreateForm({\n      onSuccess: form => {\n        console.log(form);\n      }\n    }, [{\n      name: 'key',\n      label: null,\n      type: 'textarea',\n      value: `{\n                              \"atmos_upvotes\": true,\n                              \"scatter_timeout\": 3000,\n                              \"theme\": \"https://eos-forum.org/static/css/theme/day.css\",\n                              \"novusphere_api\": \"https://db.novusphere.io\",\n                              \"eos_api\": {\n                                \"host\": \"eos.greymass.com\",\n                                \"port\": \"443\",\n                                \"protocol\": \"https\"\n                              }\n                            }`,\n      rules: 'required|string'\n    }]);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"localStorageVersion\", [persist, observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '2.0.0';\n  }\n})), _class);\nexport { Settings as default };\nexport const getSettingsStore = getOrCreateStore('settingsStore', Settings);","map":null,"metadata":{},"sourceType":"module"}