{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\n\nvar _dec, _class, _temp;\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { discussions } from \"../../novusphere-js\";\nimport PostPreview from \"../../components/post-preview/post-preview\";\nimport { inject, observer } from 'mobx-react';\nimport { pushToThread } from \"../../utils\";\nvar Index = (_dec = inject('tagStore', 'postsStore'), _dec(_class = observer(_class = (_temp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Index)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.clickPost = function (post) {\n      pushToThread(post);\n    };\n\n    _this.renderPosts = function () {\n      var searchResult = _this.props.searchResult;\n\n      if (!searchResult.length || !searchResult) {\n        return __jsx(\"span\", {\n          className: 'f6'\n        }, \"No results found\");\n      }\n\n      return searchResult.filter(function (result) {\n        return result.tags[0].length;\n      }).map(function (result) {\n        return __jsx(PostPreview, {\n          key: result.id,\n          post: result,\n          onClick: _this.clickPost,\n          tag: _this.props.tagStore.tags.get(result.sub),\n          disableVoteHandler: true\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.tagStore.destroyActiveTag();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          searchValue = _this$props.searchValue,\n          searchResult = _this$props.searchResult;\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: 'card pa4 mb3'\n      }, __jsx(\"span\", {\n        className: 'black f5'\n      }, \"Showing results for: \", __jsx(\"span\", {\n        className: 'b'\n      }, searchValue)), __jsx(\"span\", {\n        className: 'f5 pl2'\n      }, \"(\", searchResult.length, \" results)\")), this.renderPosts());\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var query, store, searchValue, postsStore, searchResult;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = _ref.query, store = _ref.store;\n                searchValue = query.q;\n                postsStore = store.postsStore;\n                postsStore.resetPositionAndPosts();\n                _context.next = 6;\n                return discussions.getPostsForSearch(searchValue);\n\n              case 6:\n                searchResult = _context.sent;\n                return _context.abrupt(\"return\", {\n                  searchValue: searchValue,\n                  searchResult: searchResult\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Index;\n}(React.Component), _temp)) || _class) || _class);\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}