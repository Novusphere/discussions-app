{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime-corejs2/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime-corejs2/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime-corejs2/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime-corejs2/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"@babel/runtime-corejs2/helpers/inherits\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports[\"default\"] = withRouter;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _router = require(\"./router\");\n\nfunction withRouter(ComposedComponent) {\n  var WithRouteWrapper =\n  /*#__PURE__*/\n  function (_react$default$Compon) {\n    _inherits(WithRouteWrapper, _react$default$Compon);\n\n    function WithRouteWrapper() {\n      var _this;\n\n      _classCallCheck(this, WithRouteWrapper);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(WithRouteWrapper).apply(this, arguments));\n      _this.context = void 0;\n      return _this;\n    }\n\n    _createClass(WithRouteWrapper, [{\n      key: \"render\",\n      value: function render() {\n        return _react[\"default\"].createElement(ComposedComponent, (0, _extends2[\"default\"])({\n          router: this.context\n        }, this.props));\n      }\n    }]);\n\n    return WithRouteWrapper;\n  }(_react[\"default\"].Component);\n\n  WithRouteWrapper.displayName = void 0;\n  WithRouteWrapper.getInitialProps = void 0;\n  WithRouteWrapper.contextType = _router.RouterContext;\n  WithRouteWrapper.getInitialProps = ComposedComponent.getInitialProps // This is needed to allow checking for custom getInitialProps in _app\n  ;\n  WithRouteWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';\n    WithRouteWrapper.displayName = \"withRouter(\" + name + \")\";\n  }\n\n  return WithRouteWrapper;\n}","map":null,"metadata":{},"sourceType":"script"}