{"ast":null,"code":"var _dec, _class, _temp;\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { PostPreview } from \"../components\";\nimport { pushToThread } from \"../utils\";\nlet Index = (_dec = inject('postsStore', 'tagStore'), _dec(_class = observer(_class = (_temp = class Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.clickPost = post => {\n      return pushToThread(post);\n    };\n  }\n\n  static async getInitialProps({\n    store\n  }) {\n    const uiStore = store.uiStore;\n    const tagStore = store.tagStore;\n    uiStore.toggleSidebarStatus(true);\n    uiStore.toggleBannerStatus(true);\n    tagStore.destroyActiveTag();\n    return {};\n  }\n\n  async componentWillMount() {\n    await this.props.postsStore.getPostsByTag(['home']);\n  }\n\n  render() {\n    if (!this.props.postsStore.posts || !this.props.postsStore.posts.length) {\n      return __jsx(\"span\", null, \"No posts found\");\n    }\n\n    return this.props.postsStore.posts.map(post => {\n      return __jsx(PostPreview, {\n        post: post,\n        key: post.uuid,\n        onClick: this.clickPost,\n        tag: this.props.tagStore.tags.get(post.sub),\n        voteHandler: this.props.postsStore.vote\n      });\n    });\n  }\n\n}, _temp)) || _class) || _class);\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}