{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { action, computed, observable, set } from 'mobx';\nimport { task } from 'mobx-task';\nimport { Messages } from \"../constants/globals\";\nimport { generateUuid, getAttachmentValue } from \"../utils\";\nimport { getNewAuthStore, getPostsStore, getUiStore } from \"../stores\";\nimport PostModel from \"./postModel\";\nimport { discussions } from \"../novusphere-js\";\nexport var ReplyModel = (_dec = task.resolved, (_class = (_temp =\n/*#__PURE__*/\nfunction () {\n  // the post replying to\n  function ReplyModel(post, map) {\n    _classCallCheck(this, ReplyModel);\n\n    _initializerDefineProperty(this, \"uid\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"content\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"open\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"map\", _descriptor4, this);\n\n    this.newAuthStore = void 0;\n    this.postStore = void 0;\n    this.uiStore = void 0;\n\n    _initializerDefineProperty(this, \"post\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"setContent\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"clearContent\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"onSubmit\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"toggleOpen\", _descriptor9, this);\n\n    this.uid = post.uuid;\n    this.map = map;\n    this.newAuthStore = getNewAuthStore();\n    this.postStore = getPostsStore();\n    this.uiStore = getUiStore();\n  }\n\n  _createClass(ReplyModel, [{\n    key: \"inlineTags\",\n    get: function get() {\n      return this.content.match(/#([^\\s.,;:!?]+)/gi);\n    }\n  }, {\n    key: \"inlineMentions\",\n    get: function get() {\n      return this.content.match(/\\[@(.*?)]\\(.*?\\)/gi);\n    }\n  }, {\n    key: \"inlineMentionHashes\",\n    get: function get() {\n      var regex = new RegExp(/\\(?EOS.*\\)?\\w/, 'gi');\n      return this.inlineMentions.map(function (items) {\n        return items.match(regex)[0];\n      });\n    }\n  }]);\n\n  return ReplyModel;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"uid\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"content\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return '';\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"open\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return false;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"map\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"post\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return null;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"setContent\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return function (content) {\n      _this.content = content;\n    };\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"clearContent\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function () {\n      _this2.content = '';\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"inlineTags\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"inlineTags\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"inlineMentions\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"inlineMentions\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"inlineMentionHashes\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"inlineMentionHashes\"), _class.prototype), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"onSubmit\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return (\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var post, generatedUid, posterName, reply, tags, activeThread, model, signedReply, confirmedReply;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (_this3.newAuthStore.hasAccount) {\n                  _context.next = 3;\n                  break;\n                }\n\n                _this3.uiStore.showToast('You must be logged in to comment', 'error');\n\n                return _context.abrupt(\"return\");\n\n              case 3:\n                if (!_this3.post) {\n                  post = _this3.map[_this3.uid];\n                }\n\n                if (_this3.content) {\n                  _context.next = 6;\n                  break;\n                }\n\n                throw Error(Messages.ERROR.POST_EMPTY);\n\n              case 6:\n                generatedUid = generateUuid();\n                posterName = _this3.newAuthStore.posterName;\n                reply = {\n                  poster: null,\n                  displayName: null,\n                  title: '',\n                  content: _this3.content,\n                  sub: post.sub,\n                  chain: 'eos',\n                  mentions: _this3.inlineMentionHashes,\n                  tags: [post.sub],\n                  id: generatedUid,\n                  uuid: generatedUid,\n                  parentUuid: post.uuid,\n                  threadUuid: post.threadUuid,\n                  attachment: getAttachmentValue(_this3.content),\n                  upvotes: 0,\n                  downvotes: 0\n                };\n\n                if (posterName === _this3.newAuthStore.displayName.bk) {\n                  reply.poster = undefined;\n                  reply.displayName = posterName;\n                }\n\n                if (posterName === _this3.newAuthStore.displayName.scatter) {\n                  reply.poster = posterName;\n                  reply.displayName = posterName;\n                }\n\n                tags = _this3.inlineTags;\n\n                if (tags && tags.length) {\n                  tags = tags.map(function (tag) {\n                    return tag.replace('#', '');\n                  });\n                  reply.tags = [].concat(_toConsumableArray(reply.tags), _toConsumableArray(tags));\n                }\n\n                _context.prev = 13;\n                activeThread = _this3.postStore.activeThread;\n\n                if (!activeThread) {\n                  _context.next = 27;\n                  break;\n                }\n\n                model = new PostModel(reply);\n                signedReply = model.sign(_this3.newAuthStore.postPriv);\n                _context.next = 20;\n                return discussions.post(signedReply);\n\n              case 20:\n                confirmedReply = _context.sent;\n                set(activeThread, {\n                  map: _objectSpread({}, activeThread.map, _defineProperty({}, reply.id, new PostModel(_objectSpread({}, confirmedReply, {\n                    upvotes: reply.displayName && reply.poster ? 1 : 0,\n                    myVote: reply.displayName && reply.poster ? 1 : 0\n                  }))))\n                });\n                _this3.content = '';\n\n                _this3.toggleOpen();\n\n                _this3.uiStore.showToast('Your reply has been submitted!', 'success');\n\n                _context.next = 28;\n                break;\n\n              case 27:\n                _this3.uiStore.showToast('Failed to submit your reply', 'error');\n\n              case 28:\n                _context.next = 34;\n                break;\n\n              case 30:\n                _context.prev = 30;\n                _context.t0 = _context[\"catch\"](13);\n\n                _this3.uiStore.showToast(_context.t0.message, 'error');\n\n                throw _context.t0;\n\n              case 34:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[13, 30]]);\n      }))\n    );\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"toggleOpen\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this4 = this;\n\n    return function () {\n      _this4.open = !_this4.open;\n    };\n  }\n})), _class));","map":null,"metadata":{},"sourceType":"module"}