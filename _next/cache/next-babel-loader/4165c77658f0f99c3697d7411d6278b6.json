{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\n\nvar _dec, _class;\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Thread } from \"../../components\";\nimport { ThreadModel } from \"../../models/threadModel\";\nimport Head from 'next/head';\nvar E = (_dec = inject('postsStore', 'tagStore'), _dec(_class = observer(_class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(E, _React$Component);\n\n  function E() {\n    _classCallCheck(this, E);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(E).apply(this, arguments));\n  }\n\n  _createClass(E, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.props.tagStore.setActiveTag(this.props.query.tag);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          _this$props$query = _this$props.query,\n          id = _this$props$query.id,\n          tag = _this$props$query.tag,\n          title = _this$props$query.title,\n          thread = _this$props.thread;\n\n      if (!thread) {\n        return __jsx(\"span\", null, \"No posts found for specified thread: \", id);\n      }\n\n      thread = new ThreadModel(thread);\n      return __jsx(\"div\", {\n        className: 'thread-container'\n      }, __jsx(Head, null, __jsx(\"title\", null, title, \" - \", tag)), __jsx(Thread, {\n        opening: thread.openingPost,\n        openingModel: thread.rbModel(thread.openingPost),\n        getModel: thread.rbModel,\n        getRepliesFromMap: thread.getRepliesFromMap,\n        vote: thread.vote,\n        openingPostReplies: thread.openingPostReplies,\n        totalReplies: thread.totalReplies\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(_ref) {\n        var query, store, uiStore, tagStore, postsStore, thread;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                query = _ref.query, store = _ref.store;\n                uiStore = store.uiStore;\n                tagStore = store.tagStore;\n                postsStore = store.postsStore;\n                tagStore.setActiveTag(query.tag);\n                _context2.next = 7;\n                return postsStore.getAndSetThread(query.id);\n\n              case 7:\n                thread = _context2.sent;\n\n                if (thread) {\n                  query.title = thread.title;\n                  query.tag = thread.sub;\n                }\n\n                uiStore.toggleSidebarStatus(true);\n                uiStore.toggleBannerStatus(true);\n                return _context2.abrupt(\"return\", {\n                  query: query,\n                  thread: thread\n                });\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return E;\n}(React.Component)) || _class) || _class);\nexport default E;","map":null,"metadata":{},"sourceType":"module"}