{"ast":null,"code":"var _dec, _class, _temp;\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { discussions } from \"../../novusphere-js\";\nimport PostPreview from \"../../components/post-preview/post-preview\";\nimport { inject, observer } from 'mobx-react';\nimport { pushToThread } from \"../../utils\";\nlet All = (_dec = inject('tagStore', 'postsStore'), _dec(_class = observer(_class = (_temp = class All extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.clickPost = post => {\n      pushToThread(post);\n    };\n  }\n\n  static async getInitialProps({\n    store\n  }) {\n    const tagStore = store.tagStore;\n    tagStore.destroyActiveTag();\n    const threads = await discussions.getPostsForSubs(['all']);\n    return {\n      threads\n    };\n  }\n\n  render() {\n    return this.props.threads.filter(result => result.tags[0].length).map(thread => __jsx(PostPreview, {\n      key: thread.id,\n      post: thread,\n      onClick: this.clickPost,\n      tag: this.props.tagStore.tags.get(thread.sub),\n      disableVoteHandler: true\n    }));\n  }\n\n}, _temp)) || _class) || _class);\nexport default All;","map":null,"metadata":{},"sourceType":"module"}