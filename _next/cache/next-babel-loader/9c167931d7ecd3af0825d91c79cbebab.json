{"ast":null,"code":"var _dec, _class, _temp;\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { PostPreview } from \"./..\";\nimport { inject, observer } from 'mobx-react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nlet Feed = (_dec = inject('tagStore', 'postsStore'), _dec(_class = observer(_class = (_temp = class Feed extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getPostsByCurrentTag = async () => {\n      const {\n        tagModel\n      } = this.props;\n      const {\n        getPostsByTag\n      } = this.props.postsStore;\n      await getPostsByTag([tagModel.name]);\n    };\n\n    this.renderEndMessage = () => {\n      return __jsx(\"div\", {\n        className: 'bg-white tc pa3'\n      }, __jsx(\"span\", {\n        className: 'f6'\n      }, \"You have reached the end!\"));\n    };\n\n    this.renderLoadingMessage = () => {\n      return __jsx(\"div\", {\n        className: 'bg-white tc pa3'\n      }, __jsx(FontAwesomeIcon, {\n        width: 13,\n        icon: faSpinner,\n        spin: true\n      }));\n    };\n  }\n\n  render() {\n    const {\n      threads\n    } = this.props;\n\n    if (!threads) {\n      return __jsx(\"span\", null, \"No posts found\");\n    }\n\n    const {\n      postsPosition\n    } = this.props.postsStore;\n    return __jsx(InfiniteScroll, {\n      dataLength: postsPosition.items,\n      next: this.getPostsByCurrentTag,\n      hasMore: postsPosition.cursorId !== 0,\n      loader: this.renderLoadingMessage(),\n      endMessage: this.renderEndMessage()\n    }, threads.map(post => {\n      return __jsx(PostPreview, {\n        post: post,\n        key: post.uuid,\n        onClick: this.props.onClick,\n        tag: this.props.tagModel,\n        voteHandler: post.vote\n      });\n    }));\n  }\n\n}, _temp)) || _class) || _class);\nexport default Feed;","map":null,"metadata":{},"sourceType":"module"}