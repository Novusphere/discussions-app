{"ast":null,"code":"const fetch = require('node-fetch');\n\nexport const DEFAULT_NSDB_ENDPOINT = 'https://atmosdb.novusphere.io';\nexport class NSDB {\n  constructor() {\n    this.api = void 0;\n    this.api = DEFAULT_NSDB_ENDPOINT;\n  }\n\n  async init(apiEndpoint) {\n    this.api = apiEndpoint;\n  }\n\n  async cors(url) {\n    const request = await fetch(`https://db.novusphere.io/service/cors/?${url}`);\n    const result = await request.text();\n    return result;\n  }\n\n  async search(sq) {\n    const qs = `c=${sq.cursorId ? sq.cursorId : ''}&` + `q=${sq.query ? JSON.stringify(sq.query) : ''}&` + `s=${sq.sort ? JSON.stringify(sq.sort) : ''}&` + `u=${sq.account ? sq.account : ''}&` + `lim=${typeof sq.limit !== 'undefined' ? sq.limit : 20}&` + `p=${typeof sq.count !== 'undefined' ? sq.count : 0}`;\n    const request = await fetch(`${this.api}/discussions/search?${qs}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'text/plain'\n      }\n    });\n    const result = await request.json();\n\n    if (result.error) {\n      console.log(result);\n      throw new Error(result.error);\n    }\n\n    sq.cursorId = result.cursorId;\n    sq.count = result.count;\n    sq.limit = result.limit;\n    sq.payload = result.payload;\n    return sq;\n  }\n\n}\n;","map":null,"metadata":{},"sourceType":"module"}